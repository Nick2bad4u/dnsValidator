name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Test & coverage
        run: npm run test:coverage

      - name: Build
        run: npm run build

      - name: Verify package contents
        run: npm pack --dry-run

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true

  publish-gpr:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: publish-npm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          registry-url: https://npm.pkg.github.com
          scope: '@${{ github.repository_owner }}'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Rewrite package name for GPR
        run: |
          node -e "const fs=require('fs');const pkg=JSON.parse(fs.readFileSync('package.json','utf8'));pkg.name='@'+process.env.OWNER+'/'+pkg.name;delete pkg.publishConfig;fs.writeFileSync('package.json',JSON.stringify(pkg,null,2));"
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Publish to GPR
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --provenance
