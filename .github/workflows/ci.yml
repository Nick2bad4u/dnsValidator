name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions: # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage
        continue-on-error: true

      - name: Build package
        run: npm run build

      - name: Check bundle size
        run: npm run size
        continue-on-error: true

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3.1.6
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build-docs:
    permissions:
      contents: write # for peaceiris/actions-gh-pages to push pages branch
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        run: npm run docs

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  compatibility:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Test CommonJS compatibility
        run: node -e "console.log(require('./dist/index.js'))"
        continue-on-error: false

      - name: Test ESM compatibility
        run: |
          node -e "const fs=require('fs');const pkg=JSON.parse(fs.readFileSync('package.json','utf8'));function resolveExport(p){if(p.module)return p.module;const exp=p.exports&&(p.exports['.']??p.exports);if(!exp)return null;if(typeof exp==='string')return exp;if(typeof exp==='object'){return exp.import||exp.module||exp.default||exp.require||null}return null}let target=resolveExport(pkg)||'./dist/index.js';if(!target.startsWith('./')&&!target.startsWith('../'))target='./'+target;console.log('Attempting ESM import of',target);(async()=>{try{const m=await import(target);console.log('ESM import ok. Export keys:',Object.keys(m))}catch(err){console.error('ESM import failed:',err);process.exit(1)}})();"
        continue-on-error: false

      - name: Test TypeScript definitions
        run: npx tsc --noEmit --skipLibCheck examples/basic-usage.ts
        continue-on-error: false

      - name: Test TypeScript definitions
        run: npx tsc --noEmit --skipLibCheck examples/basic-usage.ts
        continue-on-error: false
